#include <bits/stdc++.h> 
int solve(vector<int>&nums,int i,int n,vector<int>&dp)
{
    //base case
    if(i>n-1)
    {
        return 0;
    }
    if(i==n-1)
    {
       return nums[n-1];
    }
    if(dp[i]!=-1)
    {
        return dp[i];
    }
    int inc = solve(nums,i+2,n,dp)+nums[i];
    int excl= solve(nums,i+1,n,dp)+0;

    dp[i]=max(inc,excl);
    return dp[i];
}
int maximumNonAdjacentSum(vector<int> &nums)
{
    // Write your code here.
    int n = nums.size();
    vector<int> dp(n+1,-1);
    return solve(nums,0,n,dp);
}
