build min heap which has 0 indexing
#include <bits/stdc++.h>
void heapify(vector<int> &arr, int n, int i) {
  int smallest = i;
  int left = 2 * i + 1;
  int right = 2 * i + 2;
    if(left<n  && arr[smallest]>arr[left])
    {
        smallest = left;
    }
    if(right<n && arr[smallest]>arr[right])
    {
        smallest = right;
    }
    //if the value ith value has been updates
    //we have to swap
    if(smallest!=i)
    {
       swap(arr[smallest],arr[i]);
       //thn we have to call on the sub tree
       heapify(arr,n,smallest);
    }
}
vector<int> buildMinHeap(vector<int> &arr)
{
    // Write your code here
    int n = arr.size();
    //the loops is started from n/2-1 cuz the nodes from n/2 to n are the leaf nodes and the lead nodes are always heap
    for(int i = n/2-1;i>=0;i--)
    {
        heapify(arr,n,i);
    }
    return arr;
}
